{"version":3,"file":"static/js/702.55aa7c96.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Movielist = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n  padding: 20px;\n`;\nexport const ListItem = styled.li`\n  margin: 10px;\n  // width: 150px;\n  flex-basis: calc((100% - 10 * 15px) / 5);\n  padding: 5px;\n  background: #fff;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  color: #000;\n  margin-bottom: 5px;\n  padding: 5px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  display: block;\n\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  MovieCardLink,\n  ListItem,\n  MovieTitle,\n  MovieImage,\n} from './MoviesList.styled';\nconst NO_POSTER =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n\nexport const MoviesListItem = ({ movie, link, currentPage }) => {\n  const location = useLocation();\n  // console.log(location);\n  console.log(currentPage);\n\n  return (\n    <ListItem>\n      <MovieCardLink\n        to={`/${link}`}\n        state={{ from: location.pathname + location.search, page: currentPage }}\n      >\n        <MovieImage\n          src={\n            movie.poster_path === null\n              ? `${NO_POSTER}`\n              : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`\n          }\n          alt={movie.title}\n          width=\"150\"\n        />\n        <MovieTitle>{movie.title}</MovieTitle>\n      </MovieCardLink>\n    </ListItem>\n  );\n};\n","import { MoviesListItem } from './MoviesListItem';\nimport { Movielist } from './MoviesList.styled';\n\nconst MoviesList = ({ moviesList, currentPage }) => {\n  return (\n    <Movielist>\n      {moviesList.map(movie => {\n        return (\n          <MoviesListItem\n            movie={movie}\n            key={movie.id}\n            link={`movies/${movie.id}`}\n            currentPage={currentPage}\n          />\n        );\n      })}\n    </Movielist>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const PaginationWrap = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const PageBtn = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  &:hover {\n    background-color: #4490da;\n    color: #fff;\n  }\n`;\n\nexport const CtrlBtn = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n`;\n","import { PaginationWrap, PageBtn } from './Pagination.styled';\n\nimport {\n  GrNext,\n  GrPrevious,\n  GrChapterNext,\n  GrChapterPrevious,\n} from 'react-icons/gr';\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pageNumbers = [];\n  const maxPageButtons = 10;\n  let startPage, endPage;\n\n  if (totalPages <= maxPageButtons) {\n    // Less than maxPageButtons total pages so show all\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    // More than maxPageButtons total pages so calculate start and end pages\n    const maxPagesBeforeCurrentPage = Math.floor(maxPageButtons / 2);\n    const maxPagesAfterCurrentPage = Math.ceil(maxPageButtons / 2) - 1;\n    if (currentPage <= maxPagesBeforeCurrentPage) {\n      // Near the start of the page range\n      startPage = 1;\n      endPage = maxPageButtons;\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n      // Near the end of the page range\n      startPage = totalPages - maxPageButtons + 1;\n      endPage = totalPages;\n    } else {\n      // Somewhere in the middle\n      startPage = currentPage - maxPagesBeforeCurrentPage;\n      endPage = currentPage + maxPagesAfterCurrentPage;\n    }\n  }\n\n  for (let page = startPage; page <= endPage; page++) {\n    pageNumbers.push(page);\n  }\n\n  return (\n    <PaginationWrap>\n      {currentPage > 1 && (\n        <>\n          <PageBtn onClick={() => onPageChange(1)}>\n            <GrChapterPrevious />\n          </PageBtn>\n          <PageBtn onClick={() => onPageChange(currentPage - 1)}>\n            <GrPrevious />\n          </PageBtn>\n        </>\n      )}\n      {pageNumbers.map(page => (\n        <PageBtn\n          key={page}\n          disabled={page === currentPage}\n          className={`page-item ${page === currentPage ? 'active' : ''}`}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PageBtn>\n      ))}\n      {currentPage < totalPages && (\n        <>\n          <PageBtn onClick={() => onPageChange(currentPage + 1)}>\n            <GrNext />\n          </PageBtn>\n          <PageBtn onClick={() => onPageChange(totalPages)}>\n            <GrChapterNext />\n          </PageBtn>\n        </>\n      )}\n    </PaginationWrap>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n\nexport const Form = styled.form`\n  width: 300px;\n`;\nexport const FormWrapper = styled.div`\n  position: relative;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  outline: none;\n  padding: 5px 24px;\n  border: 1px solid #212121;\n  border-radius: 5px;\n`;\nexport const SubmitBtn = styled.button`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: transparent;\n  outline: none;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nimport { fetchMoviesByQuery } from '../../services/api';\n\nimport MoviesList from 'components/MoviesList';\nimport Pagination from 'components/Pagination';\n\nimport { IoSearch } from 'react-icons/io5';\n\nimport { Wrapper, Form, FormWrapper, Input, SubmitBtn } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const userQuery = queryParams.get('query');\n  const pageFromURL = parseInt(queryParams.get('page') || '1', 10);\n\n  useEffect(() => {\n    setQuery(userQuery || '');\n    setPage(pageFromURL);\n  }, [pageFromURL, userQuery]);\n\n  useEffect(() => {\n    if (userQuery) {\n      getPopularMovies();\n    }\n    async function getPopularMovies() {\n      try {\n        const result = await fetchMoviesByQuery(userQuery, page);\n        setMovies(result.results);\n        setTotalPages(Math.min(result.total_pages, 500));\n      } catch (error) {\n        console.error(error);\n        Notiflix.Notify.failure('Something went wrong please try again later');\n      }\n    }\n  }, [page, userQuery]); // Depend on searchTerm and page\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setPage(1);\n    navigate(`/movies?query=${query}&page=1`);\n  };\n\n  const handlePageChange = newPage => {\n    setPage(newPage);\n    navigate(`/movies?query=${query}&page=${newPage}`);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleFormSubmit}>\n        <FormWrapper>\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query} // Ensure the input displays the current query\n            onChange={handleQueryChange}\n          />\n          <SubmitBtn type=\"submit\">\n            <IoSearch />\n          </SubmitBtn>\n        </FormWrapper>\n      </Form>\n\n      <MoviesList moviesList={movies} currentPage={page} />\n      <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aac30baed40e4ccb559433e8c8c31d6c';\n\nexport async function fetchMovies(page) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n"],"names":["MovieCardLink","styled","Link","_templateObject","_taggedTemplateLiteral","Movielist","_templateObject2","ListItem","_templateObject3","MovieTitle","_templateObject4","MovieImage","_templateObject5","MoviesListItem","_ref","movie","link","currentPage","location","useLocation","console","log","_jsx","children","_jsxs","to","concat","state","from","pathname","search","page","src","poster_path","alt","title","width","moviesList","map","id","PaginationWrap","PageBtn","startPage","endPage","totalPages","onPageChange","pageNumbers","maxPagesBeforeCurrentPage","Math","floor","maxPageButtons","maxPagesAfterCurrentPage","ceil","push","_Fragment","onClick","GrChapterPrevious","GrPrevious","disabled","className","GrNext","GrChapterNext","Wrapper","Form","FormWrapper","Input","SubmitBtn","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","query","setQuery","_useState5","_useState6","setPage","_useState7","_useState8","setTotalPages","navigate","useNavigate","queryParams","URLSearchParams","userQuery","get","pageFromURL","parseInt","useEffect","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","fetchMoviesByQuery","sent","results","min","total_pages","t0","error","Notiflix","stop","apply","arguments","getPopularMovies","handleFormSubmit","_callee2","e","_context2","preventDefault","_x","onSubmit","type","autoComplete","autoFocus","placeholder","value","onChange","target","IoSearch","MoviesList","Pagination","newPage","axios","API_KEY","fetchMovies","_fetchMovies","response","abrupt","data","fetchMovieById","_x2","_fetchMovieById","movieId","fetchMovieCast","_x3","_fetchMovieCast","_callee3","_context3","fetchMovieReviews","_x4","_fetchMovieReviews","_callee4","_context4","_x5","_x6","_fetchMoviesByQuery","_callee5","_context5"],"sourceRoot":""}