{"version":3,"file":"static/js/104.e16ad2e6.chunk.js","mappings":"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","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  border-bottom: 1px solid black;\n  padding: 5px;\n  background: #fff;\n  margin-top: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const ReviewList = styled.ul`\n  margin-bottom: 20px;\n`;\nexport const ReviewItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const Author = styled.span`\n  font-weight: 700;\n`;\nexport const DateTime = styled.span`\n  font-weight: 500;\n`;\nexport const NoReviewsWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  border: 1px solid #212121;\n  border-radius: 5px;\n  padding: 30px 0;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport Notiflix from 'notiflix';\nimport {\n  ListItem,\n  Author,\n  DateTime,\n  ReviewItem,\n  ReviewList,\n  NoReviewsWrap,\n} from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const reviews = await fetchMovieReviews(movieId);\n        if (reviews.results.length === 0) {\n          throw new Error();\n        }\n        setReviews(reviews.results);\n        console.log(reviews);\n      } catch (error) {\n        console.log(error);\n        Notiflix.Notify.failure('There are no reviews for this movie yet');\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <NoReviewsWrap>\n      <p>'There are no reviews for this movie yet'</p>\n    </NoReviewsWrap>\n  ) : (\n    <ul>\n      {reviews.map(({ author, content, created_at, id }) => {\n        let date = created_at.substr(0, 10);\n        let time = created_at.substr(11, 5);\n        return (\n          <ListItem key={id}>\n            <ReviewList>\n              <ReviewItem>\n                <Author>{author}</Author>\n              </ReviewItem>\n              <ReviewItem>\n                Date: <DateTime>{date}</DateTime>\n              </ReviewItem>\n              <ReviewItem>\n                Time: <DateTime>{time}</DateTime>\n              </ReviewItem>\n            </ReviewList>\n            <div>\n              <p>{content}</p>\n            </div>\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieReviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aac30baed40e4ccb559433e8c8c31d6c';\n\nexport async function fetchMovies(page) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n"],"names":["ListItem","styled","_templateObject","_taggedTemplateLiteral","ReviewList","_templateObject2","ReviewItem","_templateObject3","Author","_templateObject4","DateTime","_templateObject5","NoReviewsWrap","_templateObject6","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_reviews","_context","prev","next","fetchMovieReviews","sent","results","length","Error","console","log","t0","Notiflix","stop","apply","arguments","_jsx","children","map","_ref2","author","content","created_at","id","date","substr","time","_jsxs","axios","API_KEY","fetchMovies","_x","_fetchMovies","page","response","concat","abrupt","data","fetchMovieById","_x2","_fetchMovieById","_callee2","_context2","fetchMovieCast","_x3","_fetchMovieCast","_callee3","_context3","_x4","_fetchMovieReviews","_callee4","_context4","fetchMoviesByQuery","_x5","_x6","_fetchMoviesByQuery","_callee5","query","_context5"],"sourceRoot":""}