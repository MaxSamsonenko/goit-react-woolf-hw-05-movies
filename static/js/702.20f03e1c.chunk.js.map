{"version":3,"file":"static/js/702.20f03e1c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Movielist = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n  padding: 20px;\n`;\nexport const ListItem = styled.li`\n  margin: 10px;\n  // width: 150px;\n  flex-basis: calc((100% - 10 * 15px) / 5);\n  padding: 5px;\n  background: #fff;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  color: #000;\n  margin-bottom: 5px;\n  padding: 5px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  display: block;\n\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\n\nimport {\n  MovieCardLink,\n  ListItem,\n  MovieTitle,\n  MovieImage,\n} from './MoviesList.styled';\nconst NO_POSTER =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n\nexport const MoviesListItem = ({ movie }) => {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n\n  return (\n    <ListItem>\n      <MovieCardLink\n        to={`/movies/${movie.id}`}\n        state={{\n          from: location.pathname + location.search,\n          page: searchParams.get('page'),\n        }}\n      >\n        <MovieImage\n          src={\n            movie.poster_path === null\n              ? `${NO_POSTER}`\n              : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`\n          }\n          alt={movie.title}\n          width=\"150\"\n        />\n        <MovieTitle>{movie.title}</MovieTitle>\n      </MovieCardLink>\n    </ListItem>\n  );\n};\n","import { MoviesListItem } from './MoviesListItem';\nimport { Movielist } from './MoviesList.styled';\n\nconst MoviesList = ({ moviesList, currentPage }) => {\n  return (\n    <Movielist>\n      {moviesList.map(movie => {\n        return (\n          <MoviesListItem\n            movie={movie}\n            key={movie.id}\n            currentPage={currentPage}\n          />\n        );\n      })}\n    </Movielist>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const PaginationWrap = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const PageBtn = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  &:hover {\n    background-color: #4490da;\n    color: #fff;\n  }\n`;\n\nexport const CtrlBtn = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n`;\n","import { PaginationWrap, PageBtn } from './Pagination.styled';\n\nimport {\n  GrNext,\n  GrPrevious,\n  GrChapterNext,\n  GrChapterPrevious,\n} from 'react-icons/gr';\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const pageNumbers = [];\n  const maxPageButtons = 10;\n  let startPage, endPage;\n\n  if (totalPages <= maxPageButtons) {\n    // Less than maxPageButtons total pages so show all\n    startPage = 1;\n    endPage = totalPages;\n  } else {\n    // More than maxPageButtons total pages so calculate start and end pages\n    const maxPagesBeforeCurrentPage = Math.floor(maxPageButtons / 2);\n    const maxPagesAfterCurrentPage = Math.ceil(maxPageButtons / 2) - 1;\n    if (currentPage <= maxPagesBeforeCurrentPage) {\n      // Near the start of the page range\n      startPage = 1;\n      endPage = maxPageButtons;\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n      // Near the end of the page range\n      startPage = totalPages - maxPageButtons + 1;\n      endPage = totalPages;\n    } else {\n      // Somewhere in the middle\n      startPage = currentPage - maxPagesBeforeCurrentPage;\n      endPage = currentPage + maxPagesAfterCurrentPage;\n    }\n  }\n\n  for (let page = startPage; page <= endPage; page++) {\n    pageNumbers.push(page);\n  }\n\n  return (\n    <PaginationWrap>\n      {currentPage > 1 && (\n        <>\n          <PageBtn onClick={() => onPageChange(1)}>\n            <GrChapterPrevious />\n          </PageBtn>\n          <PageBtn onClick={() => onPageChange(currentPage - 1)}>\n            <GrPrevious />\n          </PageBtn>\n        </>\n      )}\n      {pageNumbers.map(page => (\n        <PageBtn\n          key={page}\n          disabled={page === currentPage}\n          className={`page-item ${page === currentPage ? 'active' : ''}`}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PageBtn>\n      ))}\n      {currentPage < totalPages && (\n        <>\n          <PageBtn onClick={() => onPageChange(currentPage + 1)}>\n            <GrNext />\n          </PageBtn>\n          <PageBtn onClick={() => onPageChange(totalPages)}>\n            <GrChapterNext />\n          </PageBtn>\n        </>\n      )}\n    </PaginationWrap>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n\nexport const Form = styled.form`\n  width: 300px;\n`;\nexport const FormWrapper = styled.div`\n  position: relative;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  outline: none;\n  padding: 5px 24px;\n  border: 1px solid #212121;\n  border-radius: 5px;\n`;\nexport const SubmitBtn = styled.button`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: transparent;\n  outline: none;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nimport { fetchMoviesByQuery } from '../../services/api';\n\nimport MoviesList from 'components/MoviesList';\nimport Pagination from 'components/Pagination';\n\nimport { IoSearch } from 'react-icons/io5';\n\nimport { Wrapper, Form, FormWrapper, Input, SubmitBtn } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userQuery = searchParams.get('query');\n  const pageFromURL = parseInt(searchParams.get('page') || '1', 10);\n\n  useEffect(() => {\n    setQuery(userQuery || '');\n    setPage(pageFromURL);\n  }, [pageFromURL, userQuery]);\n\n  useEffect(() => {\n    if (userQuery) {\n      getPopularMovies();\n    }\n    async function getPopularMovies() {\n      try {\n        const result = await fetchMoviesByQuery(userQuery, page);\n        setMovies(result.results);\n        setTotalPages(Math.min(result.total_pages, 500));\n      } catch (error) {\n        console.error(error);\n        Notiflix.Notify.failure('Something went wrong please try again later');\n      }\n    }\n  }, [page, userQuery]);\n\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setPage(1);\n    setSearchParams({ query: query, page: 1 });\n  };\n\n  const handlePageChange = newPage => {\n    setPage(newPage);\n    setSearchParams({ query: query, page: newPage });\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleFormSubmit}>\n        <FormWrapper>\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query} // Ensure the input displays the current query\n            onChange={handleQueryChange}\n          />\n          <SubmitBtn type=\"submit\">\n            <IoSearch />\n          </SubmitBtn>\n        </FormWrapper>\n      </Form>\n\n      <MoviesList moviesList={movies} currentPage={page} />\n      <Pagination\n        currentPage={page}\n        totalPages={totalPages}\n        onPageChange={handlePageChange}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aac30baed40e4ccb559433e8c8c31d6c';\n\nexport async function fetchMovies(page) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n"],"names":["MovieCardLink","styled","Link","_templateObject","_taggedTemplateLiteral","Movielist","_templateObject2","ListItem","_templateObject3","MovieTitle","_templateObject4","MovieImage","_templateObject5","MoviesListItem","_ref","movie","location","useLocation","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_jsx","children","_jsxs","to","concat","id","state","from","pathname","search","page","get","src","poster_path","alt","title","width","moviesList","currentPage","map","PaginationWrap","PageBtn","startPage","endPage","totalPages","onPageChange","pageNumbers","maxPagesBeforeCurrentPage","Math","floor","maxPageButtons","maxPagesAfterCurrentPage","ceil","push","_Fragment","onClick","GrChapterPrevious","GrPrevious","disabled","className","GrNext","GrChapterNext","Wrapper","Form","FormWrapper","Input","SubmitBtn","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","query","setQuery","_useState5","_useState6","setPage","_useState7","_useState8","setTotalPages","_useSearchParams2","setSearchParams","userQuery","pageFromURL","parseInt","useEffect","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","fetchMoviesByQuery","sent","results","min","total_pages","t0","console","error","Notiflix","stop","apply","arguments","getPopularMovies","handleFormSubmit","_callee2","e","_context2","preventDefault","_x","onSubmit","type","autoComplete","autoFocus","placeholder","value","onChange","target","IoSearch","MoviesList","Pagination","newPage","axios","API_KEY","fetchMovies","_fetchMovies","response","abrupt","data","fetchMovieById","_x2","_fetchMovieById","movieId","fetchMovieCast","_x3","_fetchMovieCast","_callee3","_context3","fetchMovieReviews","_x4","_fetchMovieReviews","_callee4","_context4","_x5","_x6","_fetchMoviesByQuery","_callee5","_context5"],"sourceRoot":""}