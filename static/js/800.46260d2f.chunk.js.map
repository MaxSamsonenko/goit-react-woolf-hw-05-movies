{"version":3,"file":"static/js/800.46260d2f.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const TableWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const TitleWrapper = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Tagline = styled.p`\n  color: #adadad;\n`;\nexport const Table = styled.table`\n  margin-bottom: 30px;\n`;\nexport const Descr = styled.p`\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n","import {\n  Wrapper,\n  TitleWrapper,\n  TableWrapper,\n  Tagline,\n  Table,\n  Descr,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    tagline,\n    release_date,\n    genres,\n    production_countries,\n    original_title,\n    status,\n    vote_average,\n    overview,\n  } = movie;\n  const getYear = dateStr => {\n    if (dateStr) {\n      return dateStr.slice(0, 4);\n    }\n    return 'Unknown';\n  };\n  const getNames = arr => {\n    if (arr) {\n      return arr.map(item => item.name);\n    }\n    return 'No Data';\n  };\n  const NO_POSTER =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n  return (\n    <Wrapper>\n      <div>\n        <img\n          src={\n            movie.poster_path === null\n              ? `${NO_POSTER}`\n              : `https://image.tmdb.org/t/p/w300/${poster_path}`\n          }\n          alt={title}\n        />\n      </div>\n      <TableWrapper>\n        <TitleWrapper>\n          <h1>{movie.title}</h1>\n          <Tagline>\n            <i>{tagline}</i>\n          </Tagline>\n        </TitleWrapper>\n        <Table>\n          <tbody>\n            <tr>\n              <td>Original:</td>\n              <td>{original_title}</td>\n            </tr>\n\n            <tr>\n              <td>Release:</td>\n              <td>{getYear(release_date)}</td>\n            </tr>\n            <tr>\n              <td>Genres:</td>\n              <td>{getNames(genres).join(', ')}</td>\n            </tr>\n            <tr>\n              <td>Country:</td>\n              <td>{getNames(production_countries).join(', ')}</td>\n            </tr>\n            <tr>\n              <td>Status:</td>\n              <td>{status}</td>\n            </tr>\n            <tr>\n              <td>Vote:</td>\n              <td>{vote_average}</td>\n            </tr>\n          </tbody>\n        </Table>\n        <Descr>Description:</Descr>\n        <p>{overview}</p>\n      </TableWrapper>\n    </Wrapper>\n  );\n};\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\nexport const InfoTitle = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const GoToLink = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const GoBackLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 5px;\n  width: 150px;\n  border: 1px solid #212121;\n  border-radius: 5px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  text-align: center;\n  &:hover {\n    border-color: #4490da;\n    background-color: #4490da;\n    color: #fff;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { GrLinkPrevious } from 'react-icons/gr';\n\nimport MovieCard from 'components/MovieCard';\n\nimport { Wrapper, ListItem, GoToLink, GoBackLink } from './MovieDetails.styled';\n\nimport { fetchMovieById } from 'services/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLink = location.state?.from || '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function getmovieById(movieId) {\n      try {\n        const result = await fetchMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getmovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <GoBackLink to={backLink}>\n        <GrLinkPrevious />\n        <span>Back to {backLink.includes('movies') ? 'Movies' : 'Home'}</span>\n      </GoBackLink>\n      {movie ? <MovieCard movie={movie} /> : 'Loading...'}\n      <ul>\n        <ListItem>\n          <GoToLink to={`cast`} state={{ from: backLink }}>\n            Cast\n          </GoToLink>\n        </ListItem>\n        <ListItem>\n          <GoToLink to={`reviews`} state={{ from: backLink }}>\n            Reviews\n          </GoToLink>\n        </ListItem>\n      </ul>\n      <Outlet />\n    </Wrapper>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aac30baed40e4ccb559433e8c8c31d6c';\n\nexport async function fetchMovies(page) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","TableWrapper","_templateObject2","TitleWrapper","_templateObject3","Tagline","_templateObject4","Table","_templateObject5","Descr","_templateObject6","_ref","dateStr","movie","poster_path","title","tagline","release_date","genres","production_countries","original_title","status","vote_average","overview","getNames","arr","map","item","name","_jsxs","children","_jsx","src","concat","alt","slice","join","ListItem","GoToLink","NavLink","GoBackLink","Link","_location$state","_useState","useState","_useState2","_slicedToArray","setMovie","movieId","useParams","backLink","useLocation","state","from","useEffect","_getmovieById","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","fetchMovieById","sent","t0","console","log","stop","apply","arguments","_x","getmovieById","to","GrLinkPrevious","includes","MovieCard","Outlet","axios","API_KEY","fetchMovies","_fetchMovies","page","response","abrupt","data","_x2","_fetchMovieById","_callee2","_context2","fetchMovieCast","_x3","_fetchMovieCast","_callee3","_context3","fetchMovieReviews","_x4","_fetchMovieReviews","_callee4","_context4","fetchMoviesByQuery","_x5","_x6","_fetchMoviesByQuery","_callee5","query","_context5"],"sourceRoot":""}